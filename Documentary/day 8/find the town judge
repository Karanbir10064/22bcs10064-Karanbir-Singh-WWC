
#include <iostream>
#include <vector>
using namespace std;

int findJudge(int N, vector<vector<int>>& trust) {
    vector<int> trustCount(N + 1, 0); // Trust count for each person

    // Process each trust relationship
    for (const auto& relation : trust) {
        int a = relation[0]; // Person a trusts person b
        int b = relation[1]; // Person b is trusted
        trustCount[a]--; // a gives trust
        trustCount[b]++; // b receives trust
    }

    // Find the judge
    for (int i = 1; i <= N; i++) {
        if (trustCount[i] == N - 1) {
            return i; // Found the judge
        }
    }

    return -1; // No judge found
}

int main() {
    int N = 4; // Number of people
    vector<vector<int>> trust = {
        {1, 3},
        {2, 3},
        {3, 1}
    };

    int judge = findJudge(N, trust);
    if (judge != -1) {
        cout << "The town judge is: " << judge << endl;
    } else {
        cout << "There is no town judge." << endl;
    }

    return 0;
}
