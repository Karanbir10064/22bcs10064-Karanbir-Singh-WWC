#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

int findCenter(const vector<vector<int>>& edges) {
    unordered_map<int, int> degreeCount;

    // Count the degree of each node
    for (const auto& edge : edges) {
        degreeCount[edge[0]]++;
        degreeCount[edge[1]]++;
    }

    // Find the node with the maximum degree
    int centerNode = -1;
    for (const auto& entry : degreeCount) {
        if (entry.second == edges.size()) { // The center should have degree equal to the number of edges
            centerNode = entry.first;
            break;
        }
    }

    return centerNode;
}

int main() {
    // Example edges of a star graph
    vector<vector<int>> edges = {
        {1, 2},
        {1, 3},
        {1, 4},
        {1, 5}
    };

    int center = findCenter(edges);
    cout << "The center of the star graph is: " << center << endl;

    return 0;
}
